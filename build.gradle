plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "5.0.0.4638"
	id 'jacoco'
}

group = 'com.inaction'
version = '0.0.1-SNAPSHOT'

jacoco {
    toolVersion = "0.8.11"
    // reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sonar {
    properties {
        property "sonar.projectKey", "spring-inaction"
        property "sonar.host.url", "http://localhost:9001"
        property "sonar.token", "sqp_d2dfc121c561a13b3ea407e74dbb0e98e118e7ce"
		property "sonar.scm.provider","git"
		property "sonar.java.binaries", "$buildDir/classes/java/main"
		property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/test/html/index.html"
    }
}

repositories {
	flatDir {
        dirs 'libs'
    }
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	testImplementation 'org.mockito:mockito-core:5.12.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
    }
}